<!DOCTYPE html>
<head>
    <title>test Projet IFT1005</title>
    <meta charset="UTF-8">
    <style>
        .anim1{
            margin-top: 365px;
            margin-left: 320px;
            font-family:'Times New Roman', Times, serif;
            font-size: 20px;
            text-align:center;
            position: absolute;
            animation: mymove 2s infinite;
            }
        @keyframes mymove {
            0%{opacity: 1;color: aqua;}
            100%{opacity: 0;color:green;}
        
        }
        
    </style>    
	
</head>
<html>
    <body>
        <!--css et javascript sont inclus,JavaScript est ci-dessous-->
        <div>
            <h2 style="text-align: center;">project name:LMT---clock</h2>
            <h3>team member: Yuxiang Lin 20172116, Wanting Teng 20179470, Yalin Mo 20199655</h3>
            <p>1. Il s'agit d'une horloge "24H". Les chiffres sur l'anneau extérieur du cadran représentent les 24 heures et les chiffres sur l'anneau intérieur du cadran représentent 60 minutes.</p>
            <p>2. La date et l'heure d'aujourd'hui sont affichées sur le cadran.Lorsque le soleil se lève (c'est-à-dire qu'il fait jour), la couleur du cadran est bleue et un soleil apparaît, et l'heure correspondant à l'apparition du soleil est l'heure du levé du soleil ;</p>
            <p>3. Lorsque le soleil se couche (c'est-à-dire la nuit), la couleur du cadran est noire et l'heure affichée sur le cadran lorsque le soleil se couche est l'heure du coucher du soleil; 
                et puis une lune apparaît et l'image de la lune sera clairement afficher la phase de lune du jour.</p>
            <p>4. Il y a des cercles colorés sur l'anneau extérieur du cadran. 
                Ils représentent les prévisions météo pour chaque heure de la journée. Le rouge signifie ensoleillé, 
                le gris signifie nuageux et le jaune signifie pluie. Lorsque vous cliquez sur le logo nuage dans le coin supérieur gauche , 
                toutes les heures sur le cadran La température correspondante sera affichée pour chaque heure.</p>
                <p>5,Lorsque l'heure atteint un certain temps, la partie du cadran blanc au milieu affichera les informations correspondantes</p>
            <p>Votre attention s'il vous plaît, Si vous ne voyez aucun effet, c'est que l'API est morte ! ! !</p>
            
        </div>

        <div style="margin-top: 30px;margin-left: 50px; width: 800;height: 800;">

            <p id="calendrier" class="anim1"></p>
            <svg id="monhorloge" width="700" height="700" style="background-color:bisque" viewBox="0 0 700 700">
                <defs>
                    <linearGradient id="grad1" x1="0%" y1="0%" x2="0%" y2="90%">
                        <stop offset="0%" stop-color=blue />
                        <stop offset="100%" stop-color=orange />
                    </linearGradient>
                    <linearGradient id="grad2" x1="0%" y1="0%" x2="0%" y2="100%">
                        <stop offset="0%" style="stop-color:rgb(255,0,0);stop-opacity:1" />
                        <stop offset="100%" style="stop-color:rgb(255,255,0);stop-opacity:1" />
                      </linearGradient>
                    <pattern id="pattern1" x="390" y="320" width="180" height="60" patternUnits="userSpaceOnUse" 
                        viewBox="0 0 180 60">
                        <rect id="moonBg" x="0" y="0" width="180" height="60" fill="yellow"/>
                        <circle id="moonShade" cx="90" cy="30" r="31" fill="skyblue"/>
                            
                        
                        
                    </pattern>

                    <pattern id="pattern2" x="190" y="265" width="60" height="180" patternUnits="userSpaceOnUse" 
                        viewBox="0 0 60 180">
                        <rect id="sunmotionBg" x="0" y="0" width="60" height="180" fill="skyblue"/>
                        <circle  id="sunmotion" cx="30" cy="90" r="30" fill="url(#grad2)"/>
                    </pattern>
                    <pattern id="pattern3" patternUnits="userSpaceOnUse" x="166" y="460" width="265" height="20" viewBox="0 0 100 20">
                        <rect x="0" y="0" width="265" height="20" fill="lightgrey"/>
                        <text x="-10" y="13" style="font-size: 10; font-weight: bold"><tspan id="now2">(time)</tspan></text>
                    </pattern>
                </defs>    
                
                <circle id="ciclepath" cx="350" cy="350" r="290" stroke-width="5" fill="white" stroke="black" />
                <circle  cx="350" cy="350" r="220" stroke-width="5" fill="url(#grad1)" stroke="black" />
                <circle  id="sky" cx="350" cy="350" r="180" fill="skyblue" stroke="black" stroke-width="5"/>
                    
                
                <circle  cx="350" cy="350" r="80" fill="white" stroke="black" stroke-width="5" />
                <circle  cx="480" cy="350" r="30" fill="url(#pattern1)" />
                <rect x="190" y="325" width="60" height="60" fill="url(#pattern2)"/>
                
                <a xlink:href="" target="_blank">
                    <rect x="295" y="220" width="112" height="20" fill="lightgrey" rx="10" ry="10" />
                    <text x="308" y="234" style="font-size: 10; font-weight: bold"><tspan id="now1">(time)</tspan></text>
                </a>
                <a xlink:href="" target="_blank">
                    <rect x="326" y="459" width="48" height="20" fill="url(#pattern3)" rx="5" ry="5" />
                </a>
                
               
                <path onclick="meteo()" d="M63.9,30.9c0-5.2-4.2-9.4-9.4-9.4c-0.2,0-0.4,0.1-0.7,0.1c-0.1-0.9-0.2-1.8-0.5-2.7c-0.3-1.1-0.9-2.2-1.5-3.1
                    c-2.1-3.2-5.8-5.3-9.9-5.3c-2.5,0-4.8,0.7-6.7,2c-0.6,0.4-1.2,0.9-1.8,1.5c-0.3,0.3-0.5,0.6-0.8,0.8c-0.2,0.3-0.5,0.6-0.7,0.9
                    c-1.9-1.3-4.2-2.1-6.7-2.1c-6,0-10.9,4.4-11.8,10.1c-3.8,1.1-6.7,4.3-7.2,8.3h28.7h13.9H63h0.8C63.9,32.1,63.9,31.7,63.9,30.9z"/>
                
                <!--hour-->
                <line id="aigH" x1="350" y1="350" x2="350" y2="185" stroke="purple" stroke-width="10" stroke-linecap="round" transform="rotate(45 350 350)" opacity="0.7"/>   
                
                <!--minute-->
                <line id="aigM" x1="350" y1="350" x2="350" y2="296" stroke="blue" stroke-width="7" stroke-linecap="round" transform="rotate(75 350 350)" opacity="0.7"/>
                 
                <!--second-->
                <line id="aigS" x1="350" y1="350" x2="350" y2="310" stroke="orange" stroke-width="5" stroke-linecap="round" transform="rotate(150 350 350)" opacity="0.7"/>
                <circle  cx="350" cy="350" r="7"/>  

                <g id="weather">
                </g>

                <text id="cal1">
                </text>
                

               

            </svg>
            
            
        </div>

        
            
        <script>
            var h=0;
            var ai=document.getElementById("aigS");
            function ajuste(){
                ai.setAttribute("transform","rotate("+h+" 350 350)");
                h=h+6;
            }    
            setInterval(ajuste,1000)

            function  temps(temprature,rot)  {
                var e = document.createElementNS("http://www.w3.org/2000/svg", 'text');
                e.setAttribute("x",350);
                e.setAttribute("y",103);
                e.setAttribute("fill","black");
                e.setAttribute("style","text-anchor:middle; font-weight:bold; font-size:13px; ");
                e.setAttribute("transform","rotate("+rot+" 350 350)");
                var textNode = document.createTextNode(temprature);
                e.appendChild(textNode);
                svg.appendChild(e);
            }
            
            function meteo(){
                var url="https://api.openweathermap.org/data/2.5/onecall?lat=45.5028&lon=-73.608&appid=027eb9b12fe104f89942e8f4df097e48"
                var req=new XMLHttpRequest();
                var tmp=''
    
                req.onreadystatechange=function(){
                    if(this.readyState==4 && this.status==200){
                        var jmeteo=JSON.parse(this.responseText);
                        var h=jmeteo.hourly;
                        for(var i=0;i<24;i++){
                            tmp=Math.round((h[i].temp-273.15))+"℃";
                            temps(tmp,i*360/24-60);
                        }
                      
                    }
                }
                req.open("GET",url,true);
                req.send();
                
    
            }
            
          
        svg=document.getElementById("monhorloge");
        gsome=document.getElementById("some");
            
            function txtH(texte,rot) {
                var e = document.createElementNS("http://www.w3.org/2000/svg", 'text');
                e.setAttribute("x",350);
                e.setAttribute("y",158);
                e.setAttribute("fill","black");
                e.setAttribute("style","text-anchor:middle;font-weight: bold; font-size:20px;");
                e.setAttribute("transform","rotate("+rot+" 350 350)");
                var textNode = document.createTextNode(texte);
                e.appendChild(textNode);
                svg.appendChild(e);
            }
    
            for(var i=0;i<24;i++) txtH(""+i,i*360/24);

            function txtM(texte,rot) {
                var e = document.createElementNS("http://www.w3.org/2000/svg", 'text');
                e.setAttribute("x",350);
                e.setAttribute("y",290);
                e.setAttribute("fill","black");
                e.setAttribute("style","text-anchor:middle; font-weight: bold; font-size:10px;");
                e.setAttribute("transform","rotate("+rot+" 350 350)");
                var textNode = document.createTextNode(texte);
                e.appendChild(textNode);
                svg.appendChild(e);
            }
    
            for(var i=0;i<60;i=i+5) txtM(""+i,i/5*360/12);
                
    
            //afficher date d'auj
            function date(){
                var dateStr = (new Date).toDateString();
                document.getElementById('now1').firstChild.nodeValue = dateStr;
            }
            date()

            function dateDetail(){
                var dateStr = (new Date).toString();
                document.getElementById('now2').firstChild.nodeValue = dateStr;
            }
            dateDetail()

            function sunriseorset(){
            var url="https://api.openweathermap.org/data/2.5/onecall?lat=45.5028&lon=-73.608&appid=027eb9b12fe104f89942e8f4df097e48"
            var req=new XMLHttpRequest();
        
            req.onreadystatechange=function(){
                if(this.readyState==4 && this.status==200){
                    var jsun=JSON.parse(this.responseText);
                    var sol=jsun.current;
                    var ep=sol.sunrise;
                    var d=new Date(ep*1000);
                    var dvalue=d.valueOf();
                    var mp=jsun.daily[0].moon_phase;

                    var now=new Date();
                    var nowvalue=now.valueOf();

                    var ep2=sol.sunset;
                    var d2=new Date(ep2*1000);
                    var d2value=d2.valueOf();

                    function shadeLune(){
                        if(mp==0){return 5}
                        else if(mp==1){return 60}
                        else{
                            var shadeL=(mp*10+1.1)*5;
                            return shadeL
                        }

                    }

                    var shade=90-shadeLune()
                    
                    //sunrise
                    if(nowvalue == dvalue){
                        var a  = document.createElementNS("http://www.w3.org/2000/svg", 'animate');
                        a.setAttribute("attributeName","cy") ;           
                        a.setAttribute("from","150");
                        a.setAttribute("to","90");
                        a.setAttribute("dur","5s");
                        var aa = document.createElementNS("http://www.w3.org/2000/svg", 'animate');
                        a.setAttribute("attributeName","fill") ;           
                        a.setAttribute("from","black");
                        a.setAttribute("to","skyblue");
                        a.setAttribute("dur","5s");
                        var ab = document.createElementNS("http://www.w3.org/2000/svg", 'animate');
                        a.setAttribute("attributeName","cx") ;           
                        a.setAttribute("from",shade.toString());
                        a.setAttribute("to","90");
                        a.setAttribute("dur","5s");
                        document.getElementById("sunmotion").appendChild(a);
                        document.getElementById("sunmotionBg").appendChild(aa);
                        document.getElementById("moonShade").appendChild(aa);
                        document.getElementById("moonShade").appendChild(ab);

                    }  

                    //sunset  
                    else if(nowvalue == d2value){
                        var b = document.createElementNS("http://www.w3.org/2000/svg", 'animate');
                        b.setAttribute("attributeName","cy");            
                        b.setAttribute("from","90");
                        b.setAttribute("to","150");
                        b.setAttribute("dur","5s");
                        var ba = document.createElementNS("http://www.w3.org/2000/svg", 'animate');
                        bb.setAttribute("attributeName","fill") ;           
                        bb.setAttribute("from","skyblue");
                        bb.setAttribute("to","black");
                        bb.setAttribute("dur","5s");
                        var bb = document.createElementNS("http://www.w3.org/2000/svg", 'animate');
                        bb.setAttribute("attributeName","cx");            
                        bb.setAttribute("from","90");
                        bb.setAttribute("to",shade.toString());
                        bb.setAttribute("dur","5s");
                        document.getElementById("sunmotion").appendChild(b);
                        document.getElementById("sunmotionBg").appendChild(ba);
                        document.getElementById("moonShade").appendChild(ba);
                        document.getElementById("moonShade").appendChild(bb);
                        
                    }
                    //during night
                    else if(nowvalue > d2value || nowvalue < dvalue){
                        document.getElementById("sunmotion").setAttribute("cy","150");
                        document.getElementById("sky").setAttribute("fill","black");
                        document.getElementById("moonShade").setAttribute("fill","black");
                        document.getElementById("moonShade").setAttribute("cx",shade.toString());
                        document.getElementById("sunmotionBg").setAttribute("fill","black");
                    }
                }
            }
            req.open("GET",url,true);
            req.send();

        }
        sunriseorset()
        
        var gWeat=document.getElementById("weather");
        function weatherDot(rot,id){
            e = document.createElementNS("http://www.w3.org/2000/svg", 'circle');
            e.setAttribute("id",id);
            e.setAttribute("cx","350");
            e.setAttribute("cy","115");
            e.setAttribute("r","8");
            e.setAttribute("transform","rotate(+"+rot+" 350 350)");
            gWeat.appendChild(e);
            return(e);
            

        }

        var weatherTab=[];
        for(var i=0;i<24;i++) weatherTab[i]=weatherDot(i*360/24,"weatherDot"+i);
        
        
        function weather(){
            var url="https://api.openweathermap.org/data/2.5/onecall?lat=45.5028&lon=-73.608&appid=027eb9b12fe104f89942e8f4df097e48"
            var req=new XMLHttpRequest();

            req.onreadystatechange=function(){
                if(this.readyState==4 && this.status==200){
                    
                    var jmeteo=JSON.parse(this.responseText);
                    var h=jmeteo.hourly;
                    for(var i=0;i<24;i++){
                        var w=h[i].weather[0].main
                        if (w=="Clouds"){
                            weatherTab[i].setAttribute("fill","grey");
                            

                        }
                        if(w=="Clear"){
                            weatherTab[i].setAttribute("fill","red");

                        }

                        if(w=="Rain"){
                            weatherTab[i].setAttribute("fill","yellow");

                        }

                        
                    }
                }   
            }
            req.open("GET",url,true);
            req.send();
            
        }
        weather()


        var gcal=document.getElementById("cal1")

        function traiteCal(calendrier){

            var now=Math.round(Date.now()/1000);
            for(var i=0;i<calendrier.length;i++) {

                var c=calendrier[i];
               
                if(c.debut<now && now<c.fin){
              
                    document.getElementById("calendrier").innerHTML=c.message
                }
               
               }
        }
               
         

         var cal
         function readCal()  {
            
            var req = new XMLHttpRequest();
            var url="http://www.iro.umontreal.ca/~roys/ift1005/calendrier/test.php?cal=now%2C%2B30sec%2Cbonjour%0D%0A%2B2min%2C%2B5min%2Csalut%2C%21%0D%0A%2B1hour%2C%2B30sec%2Callo%0D%0A"

            
           
            req.open("GET", url);
            req.send();
            req.onreadystatechange = function() {
                if( this.readyState!=4 ) return;
                if( this.status==200 ){
                    cal=JSON.parse(this.responseText);
                    traiteCal(cal);
                }
            }
        }

        readCal()


        window.onload=function ()  {
            setInterval(function() { traiteCal(cal);dateDetail(); },1000);}
                


        </script>


    </body>
</html>
